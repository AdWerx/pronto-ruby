#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'pronto'
require 'pronto/cli'
require_relative './src/github_action_check_run_formatter'

def silence_warnings(&block)
  warn_level = $VERBOSE
  $VERBOSE = nil
  result = block.call
  $VERBOSE = warn_level
  result
end

silence_warnings do
  Pronto::Formatter.const_set(
    :FORMATTERS,
    Pronto::Formatter::FORMATTERS.merge(
      'github_action_check_run' => Pronto::Formatter::GithubActionCheckRunFormatter
    )
  )
end

# github action inputs can only be strings, so when we passes the runners
# list to this container, github passes container command args quoted like this:
# `docker run ...  "run" "-r" "rubocop rails_schema" ...`
# and this fails parsing by thor with:
# `require': cannot load such file -- pronto/rubocop rails_schema (LoadError)`
# so the couple lines below turn ARGV like this:
# ```
# run
# -r
# rubocop rails_schema
# ````
#
# into this:
#
# ```
# run
# -r
# rubocop
# rails_schema
# ```
#
# which works correctly
if ARGV.include?('-r')
  runners_index = ARGV.index('-r') + 1
  runners = ARGV.at(runners_index)
  if runners.include?(' ')
    ARGV.delete_at(runners_index)
    ARGV.insert(runners_index, runners.split(' '))
  end
end

Dir.chdir(ENV.fetch('GITHUB_WORKSPACE', '/data')) do
  Pronto::CLI.start
end
